name: Cryptstorage
on: [push]
jobs:
  check:
    runs-on: linux
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT }}
        submodules: true
    - uses: actions/setup-java@v1
      with:
        java-version: '17.x'
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'

    - name: Download dependencies
      run: flutter pub get

    - name: Generate code
      run: flutter pub run build_runner build --delete-conflicting-outputs

    - name: Check code format
      run: flutter format --set-exit-if-changed .

    - name: Run Flutter Analyzer
      run: flutter analyze

    - name: Run unit tests
      run: flutter test --coverage
  build_deploy_apk:
    runs-on: linux
    needs: [check]
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT }}
        submodules: true
    - uses: actions/setup-java@v1
      with:
        java-version: '17.x'
    - name: Create Key properties file
      run: |
        echo "$KEY_PROPERTIES" | base64 -d > android/key.properties
      env:
        KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
    - run: flutter pub get
    - run: flutter pub run build_runner build --delete-conflicting-outputs
    - run: flutter build appbundle
    - name: Create Google Play Config file
      run: |
        echo "$PLAY_CONFIG_JSON" > play_config.json.b64
        base64 -d -i play_config.json.b64 > play_config.json
      env:
        PLAY_CONFIG_JSON: ${{ secrets.PLAY_CONFIG_JSON }}
    - uses: maierj/fastlane-action@v2.2.1
      with:
        lane: 'beta'
        subdirectory: 'android'
        bundle-install-path: 'vendor/bundle'
  build_ios:
    runs-on: macOS
    needs: [check]
    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.PAT }}
        submodules: true
    - uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        architecture: 'arm64'
    - run: flutter pub get
    - run: flutter pub run build_runner build --delete-conflicting-outputs
    - run: flutter build ios --release --no-codesign
  release:
    runs-on: linux
    needs: [build_ios, build_deploy_apk]
    steps:
    - uses: actions/checkout@v3
    - name: Create Sentry release
      uses: getsentry/action-release@v1
      env:
        SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
        SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
      with:
        environment: production
    - name: Create the Mattermost Message
      run: |
        echo "{\"text\":\"Build completed. [Get APK]($RUN_URL). :tada:\"}" > mattermost.json
      env:
        RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    - uses: mattermost/action-mattermost-notify@master
      env:
        MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
